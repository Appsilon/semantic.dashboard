[{"path":"https://appsilon.github.io/semantic.dashboard/CHANGELOG.html","id":null,"dir":"","previous_headings":"","what":"Change Log","title":"Change Log","text":"notable changes project documented file. format based Keep Changelog.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://appsilon.github.io/semantic.dashboard/CHANGELOG.html","id":"added-1","dir":"","previous_headings":"[0.2.0] - 15.01.2021","what":"Added","title":"Change Log","text":"title, titleWidth, left, center, right, show_menu_button menu_button_label parameters dashboardHeader overlay dim_page parameters dashboardSidebar margin param dashboardPage fluid param tabItem class param dashboardPage, dashboardBody, dashboardSidebar dashboardHeader dashboardPage, dashboardBody, dashboardSidebar dashboardHeader now built-CSS classes syntax dashboard-<component> e.g. dashboard-page. Thanks ’s easy write selectors DOM nodes related pkgdown docuemntation tests dropdown menu, utils value box","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/CHANGELOG.html","id":"changed-1","dir":"","previous_headings":"[0.2.0] - 15.01.2021","what":"Changed","title":"Change Log","text":"Main content shrink, move sidebar opened overlay = FALSE ### Fixed Issues layout responsiveness Issues sidebar position overflow","code":""},{"path":[]},{"path":"https://appsilon.github.io/semantic.dashboard/CHANGELOG.html","id":"added-2","dir":"","previous_headings":"[0.1.5] - 2020-03-30","what":"Added","title":"Change Log","text":"option collapsible icon themes support conditionPanel logo top panel","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/CHANGELOG.html","id":"changed-2","dir":"","previous_headings":"[0.1.5] - 2020-03-30","what":"Changed","title":"Change Log","text":"extended sidebar options width values semantic classes forces README","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/CHANGELOG.html","id":"fixed-1","dir":"","previous_headings":"[0.1.5] - 2020-03-30","what":"Fixed","title":"Change Log","text":"collapsible box dashboard body without left margin","code":""},{"path":[]},{"path":"https://appsilon.github.io/semantic.dashboard/CHANGELOG.html","id":"added-3","dir":"","previous_headings":"0.1.0 - 2018-01-02","what":"Added","title":"Change Log","text":"box sidebarMenu dashboardBody dashboardHeader dashboardPage dashboardSidebar menuItem renderValueBox tabItem tabItems valueBox valueBoxOutput dropdownMenu dropdownMenuOutput infoBox infoBoxOutput messageItem notificationItem renderDropdownMenu renderInfoBox tabBox taskItem","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/articles/intro.html","id":"what-is-a-dashboard","dir":"Articles","previous_headings":"","what":"What is a dashboard?","title":"Build your first semantic.dashboard","text":"R Shiny excellent tool interactive data visualizations. However, fitting large number graphs onto just one Shiny page may prove challenge. experience, virtually projects new KPIs introduced along way result inadequate readable final reports. Dashboards provide solution. allow developer intuitively structure reports breaking sections, panels tabs. makes much easier final user navigate data.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/articles/intro.html","id":"why-semantic-dashboard","dir":"Articles","previous_headings":"","what":"Why Semantic Dashboard?","title":"Build your first semantic.dashboard","text":"Semantic Dashboard offers alternative look dashboard based Fomantic UI. Historically, built package around Semantic UI library, got deprecated now (since December 2019) base well-supported maintained community fork called Fomantic UI. relies uses components mother package shiny.semantic.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/articles/intro.html","id":"semantic-dashboard","dir":"Articles","previous_headings":"","what":"Semantic Dashboard","title":"Build your first semantic.dashboard","text":"Basic dashboard structure presented . dashboardPage consists three elements: header, sidebar, body.","code":"library(shiny) library(semantic.dashboard)  ui <- dashboardPage(   dashboardHeader(),   dashboardSidebar(),   dashboardBody() )  server <- shinyServer(function(input, output, session) {    })  shinyApp(ui, server)"},{"path":"https://appsilon.github.io/semantic.dashboard/articles/intro.html","id":"editing-header","dir":"Articles","previous_headings":"Semantic Dashboard","what":"Editing header","title":"Build your first semantic.dashboard","text":"one example make header interesting: Now let’s add also notification right:","code":"dashboardHeader(color = \"blue\", title = \"Dashboard Demo\", inverted = TRUE) dashboardHeader(color = \"blue\", title = \"Dashboard Demo\", inverted = TRUE,                   dropdownMenu(type = \"notifications\",                                taskItem(\"Project progress...\", 50.777, color = \"red\")))"},{"path":"https://appsilon.github.io/semantic.dashboard/articles/intro.html","id":"editing-sidebar-and-body","dir":"Articles","previous_headings":"Semantic Dashboard","what":"Editing Sidebar and Body","title":"Build your first semantic.dashboard","text":"sidebar can define references subpages displayed content. example: PRACTICE Try add icons menuItem. content app can defined ike . Note refer exactly tabName sidebar. Note used box color set orange. list Fomantic color may find : semantic_palette.","code":"dashboardSidebar(     size = \"thin\", color = \"teal\",     sidebarMenu(       menuItem(tabName = \"main\", \"Main\"),       menuItem(tabName = \"extra\", \"Extra\")     )   ) dashboardBody(     tabItems(       selected = 1,       tabItem(         tabName = \"main\",         box(h1(\"main\"), title = \"A b c\", width = 16, color = \"orange\")       ),       tabItem(         tabName = \"extra\",           h1(\"extra\")       )     )   )"},{"path":"https://appsilon.github.io/semantic.dashboard/articles/intro.html","id":"full-code","dir":"Articles","previous_headings":"","what":"Full code","title":"Build your first semantic.dashboard","text":"effect complete code example presented .","code":"library(shiny) library(semantic.dashboard)  ui <- dashboardPage(   dashboardHeader(color = \"blue\", title = \"Dashboard Demo\", inverted = TRUE,                   dropdownMenu(type = \"notifications\",                                taskItem(\"Project progress...\", 50.777, color = \"red\"))),   dashboardSidebar(     size = \"thin\", color = \"teal\",     sidebarMenu(       menuItem(tabName = \"main\", \"Main\"),       menuItem(tabName = \"extra\", \"Extra\")     )   ),   dashboardBody(     tabItems(       selected = 1,       tabItem(         tabName = \"main\",         box(h1(\"main\"), title = \"A b c\", width = 16, color = \"orange\")       ),       tabItem(         tabName = \"extra\",           h1(\"extra\")       )     )   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://appsilon.github.io/semantic.dashboard/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Filip Stachura. Author. Dominik Krzeminski. Author. Krystian Igras. Author. Michał Maj. Contributor. Michał Drzazga. Contributor. Developers Appsilon. Maintainer. Appsilon. Copyright holder.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stachura F, Krzeminski D, Igras K (2022). semantic.dashboard: Dashboard Fomantic UI Support Shiny. R package version 0.2.1.","code":"@Manual{,   title = {semantic.dashboard: Dashboard with Fomantic UI Support for Shiny},   author = {Filip Stachura and Dominik Krzeminski and Krystian Igras},   year = {2022},   note = {R package version 0.2.1}, }"},{"path":"https://appsilon.github.io/semantic.dashboard/index.html","id":"semanticdashboard-","dir":"","previous_headings":"","what":"Dashboard with Fomantic UI Support for Shiny","title":"Dashboard with Fomantic UI Support for Shiny","text":"Quick, beautiful customizable dashboard template Shiny based shiny.semantic Fomantic UI. fed ordinary shinydashboard look? Give app new fresh look Fomantic UI support. Semantic dashboards comparison semantic.dashboard offers basic functions creating dashboard Fomantic UI.","code":"library(shiny) library(shinydashboard) # <-- Change this line to: library(semantic.dashboard)  ui <- dashboardPage(   dashboardHeader(title = \"Basic dashboard\"),   dashboardSidebar(sidebarMenu(       menuItem(tabName = \"home\", text = \"Home\", icon = icon(\"home\")),       menuItem(tabName = \"another\", text = \"Another Tab\", icon = icon(\"heart\"))   )),   dashboardBody(     fluidRow(       box(plotOutput(\"plot1\", height = 250)),       box(         title = \"Controls\",         sliderInput(\"slider\", \"Number of observations:\", 1, 100, 50)       )     )   ) )  server <- function(input, output) {   set.seed(122)   histdata <- rnorm(500)   output$plot1 <- renderPlot({     data <- histdata[seq_len(input$slider)]     hist(data)   }) }  shinyApp(ui, server)"},{"path":"https://appsilon.github.io/semantic.dashboard/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install?","title":"Dashboard with Fomantic UI Support for Shiny","text":"Install shiny.semantic library first. can find . can install stable version semantic.dashboard CRAN repository: development version can installed GitHub using remotes. install previous version can run:","code":"install.packages(\"semantic.dashboard\") remotes::install_github(\"Appsilon/semantic.dashboard\") remotes::install_github(\"Appsilon/semantic.dashboard\", ref = \"0.1.0\")"},{"path":"https://appsilon.github.io/semantic.dashboard/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Dashboard with Fomantic UI Support for Shiny","text":"can find examples examples/ folder GitHub repository. can check documentation tutorials.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute?","title":"Dashboard with Fomantic UI Support for Shiny","text":"want contribute project please submit regular PR, ’re done new feature bug fix. Please check development/README.md first! contains useful information help run dev environment semantic.dashboard.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"Dashboard with Fomantic UI Support for Shiny","text":"used latest versions dependencies library, please update R environment installation. However, encounter problems, try following: --date R language environment shiny.semantic","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/index.html","id":"future-enhacements","dir":"","previous_headings":"","what":"Future enhacements","title":"Dashboard with Fomantic UI Support for Shiny","text":"Release stable 1.0.0 version Closer integration shinydashboard","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/index.html","id":"appsilon","dir":"","previous_headings":"","what":"Appsilon","title":"Dashboard with Fomantic UI Support for Shiny","text":"Appsilon Full Service Certified RStudio Partner. Learn appsilon.com. Get touch opensource@appsilon.com","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Title","title":"Title","text":"Short description (reference issue).","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/box.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a box. — box","title":"Create a box. — box","text":"Create box additional UI elements.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a box. — box","text":"","code":"box(   ...,   title = NULL,   color = \"\",   ribbon = TRUE,   title_side = \"top right\",   collapsible = TRUE,   width = 8,   id = NULL,   collapse_icon = \"minus\",   expand_icon = \"plus\" )"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a box. — box","text":"... UI elements include within box. title Label box. color Color box. One c(\"\", \"red\", \"orange\", \"yellow\", \"olive\", \"green\", \"teal\", \"blue\", \"violet\", \"purple\", \"pink\", \"brown\", \"grey\", \"black\") ribbon label presented ribbon. title_side Side label. One c(\"top\", \"bottom\", \"top left\", \"top right\", \"bottom left\", \"bottom right\") ribbon = FALSE, one c(\"top left\", \"top right\") ribbon = TRUE collapsible minimize button added label. width Width box. id ID box. collapse_icon Icon class used collapsing (collapsible = TRUE). expand_icon Icon class used expanding (collapsible = TRUE).","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a box. — box","text":"box can passed dashboardBody","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a box. — box","text":"","code":"box(title = \"Sample box\", color = \"blue\", width = 11,     \"This is a box content\" ) #> <div class=\"eleven wide column\"> #>   <div class=\"ui segment raised blue\"> #>     <div id=\"box_182002144630971031113084025656\" class=\"ui accordion\"> #>       <div id=\"title_182002144630971031113084025656\" class=\"title\" style=\"cursor: auto\"> #>         <div class=\"ui top right ribbon label blue\"> #>           <i class=\"minus icon\" style=\"cursor: pointer;\"><\/i> #>           Sample box #>         <\/div> #>       <\/div> #>       <div class=\"content active\"> #>         <div>This is a box content<\/div> #>       <\/div> #>     <\/div> #>   <\/div> #>   <script>$(document).ready(function() {$('#box_182002144630971031113084025656').accordion({ #>   selector: { trigger: '#title_182002144630971031113084025656 > .label > .icon' }, #>   onOpening: function() { $('#title_182002144630971031113084025656 > .label > .icon').removeClass('plus').addClass('minus'); }, #>   onClosing: function() { $('#title_182002144630971031113084025656 > .label > .icon').removeClass('minus').addClass('plus'); } #> }); })<\/script> #> <\/div>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/column.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a column. — column","title":"Create a column. — column","text":"Create column additional UI elements.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a column. — column","text":"","code":"column(width, ...)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a column. — column","text":"width Width column. 1 16. ... UI elements include within column.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a column. — column","text":"column can passed dashboardPage","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a body of a dashboard. — dashboard_body","title":"Create a body of a dashboard. — dashboard_body","text":"Create body dashboard tabs additional UI elements.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a body of a dashboard. — dashboard_body","text":"","code":"dashboard_body(..., class = \"\")  dashboardBody(..., class = \"\")"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a body of a dashboard. — dashboard_body","text":"... UI elements include within body. class CSS class applied container dashboardBody. Note <body> tag.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a body of a dashboard. — dashboard_body","text":"tab can passed dashboardPage","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_body.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a body of a dashboard. — dashboard_body","text":"dashboardBody(): Create body dashboard (alias dashboard_body compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_body.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a body of a dashboard. — dashboard_body","text":"","code":"if(interactive()){    library(shiny)   library(semantic.dashboard)    ui <- dashboardPage(     dashboardHeader(color = \"blue\"),     dashboardSidebar(side = \"left\", size = \"thin\", color = \"teal\",                      sidebarMenu(                        menuItem(tabName = \"tab1\", \"Tab 1\"),                        menuItem(tabName = \"tab2\", \"Tab 2\"))),     dashboardBody(tabItems(       tabItem(tabName = \"tab1\", p(\"Tab 1\")),       tabItem(tabName = \"tab2\", p(\"Tab 2\"))))   )    server <- function(input, output) {   }    shinyApp(ui, server) }"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a header of a dashboard. — dashboard_header","title":"Create a header of a dashboard. — dashboard_header","text":"Create header dashboard additional UI elements.              Hint: use shiny::tagList() want add multiple elements left / center right.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a header of a dashboard. — dashboard_header","text":"","code":"dashboard_header(   ...,   left = NULL,   center = NULL,   right = NULL,   title = NULL,   titleWidth = \"thin\",   logo_align = \"center\",   logo_path = \"\",   color = \"\",   inverted = FALSE,   disable = FALSE,   show_menu_button = TRUE,   menu_button_label = \"Menu\",   class = \"\" )  dashboardHeader(   ...,   left = NULL,   center = NULL,   right = NULL,   title = NULL,   titleWidth = \"thin\",   logo_align = \"center\",   logo_path = \"\",   color = \"\",   inverted = FALSE,   disable = FALSE,   show_menu_button = TRUE,   menu_button_label = \"Menu\",   class = \"\" )"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a header of a dashboard. — dashboard_header","text":"... UI elements include within header. displayed right side. left UI element put left header. placed (right) title menu button (exist). center UI element put center header. right UI element put right header. placed elements defined ... (). title Dashboard title displayed upper left corner. NULL, display title field. Use \"\" empty title. titleWidth Title field width, one c(NULL, \"thin\", \"thin\", \"wide\", \"wide\") logo_align logo placed. One c(\"left\", \"center\") logo_path Path URL logo shown header. color Color sidebar / text / icons (depending value `inverted` parameter. \\ One c(\"\", \"red\", \"orange\", \"yellow\", \"olive\", \"green\", \"teal\", \"blue\", \"violet\", \"purple\", \"pink\", \"brown\", \"grey\", \"black\") inverted FALSE sidebar white text colored. \\ TRUE text white background colored. Default FALSE. disable TRUE, display header. show_menu_button FALSE, display menu button. Default TRUE. menu_button_label Text menu button. Default \"Menu\". class CSS class applied container dashboardHeader.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a header of a dashboard. — dashboard_header","text":"header can passed dashboardPage","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_header.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a header of a dashboard. — dashboard_header","text":"dashboardHeader(): Create header dashboard (alias dashboard_header compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a header of a dashboard. — dashboard_header","text":"","code":"if(interactive()) {    library(shiny)   library(semantic.dashboard)    ui <- dashboardPage(     dashboardHeader(color = \"blue\", inverted = TRUE),     dashboardSidebar(side = \"left\", size = \"thin\", color = \"teal\",                      sidebarMenu(                        menuItem(tabName = \"tab1\", \"Tab 1\"),                        menuItem(tabName = \"tab2\", \"Tab 2\"))),     dashboardBody(tabItems(       tabItem(tabName = \"tab1\", p(\"Tab 1\")),       tabItem(tabName = \"tab2\", p(\"Tab 2\"))))   )    server <- function(input, output) {   }    shinyApp(ui, server) }"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dashboard. — dashboard_page","title":"Create a dashboard. — dashboard_page","text":"Create page menu item sidebar body containing tabs additional elements.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dashboard. — dashboard_page","text":"","code":"dashboard_page(   header,   sidebar,   body,   title = \"\",   suppress_bootstrap = TRUE,   theme = NULL,   margin = TRUE,   class = \"\",   sidebar_and_body_container_class = \"\" )  dashboardPage(   header,   sidebar,   body,   title = \"\",   suppress_bootstrap = TRUE,   theme = NULL,   margin = TRUE,   class = \"\",   sidebar_and_body_container_class = \"\" )"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dashboard. — dashboard_page","text":"header Header dashboard. sidebar Sidebar dashboard. body Body dashboard. title Title dashboard. suppress_bootstrap conflicts CSS styles FomanticUI Bootstrap. time better suppress Bootstrap. TRUE bootstrap dependency shiny disabled. theme Theme name path. possible options see semanticPage. margin TRUE, margin applied whole dashboard. Defaults TRUE. class CSS class applied page container (<body> tag). sidebar_and_body_container_class CSS class applied div containing dashboardSidebar dashboardBody.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_page.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dashboard. — dashboard_page","text":"Dashboard.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_page.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a dashboard. — dashboard_page","text":"dashboardPage(): Create dashboard (alias dashboard_page compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dashboard. — dashboard_page","text":"","code":"if(interactive()){    library(shiny)   library(semantic.dashboard)    ui <- dashboardPage(     dashboardHeader(color = \"blue\"),     dashboardSidebar(side = \"left\", size = \"thin\", color = \"teal\",                      sidebarMenu(                        menuItem(tabName = \"tab1\", \"Tab 1\"),                        menuItem(tabName = \"tab2\", \"Tab 2\"))),     dashboardBody(tabItems(       tabItem(tabName = \"tab1\", p(\"Tab 1\")),       tabItem(tabName = \"tab2\", p(\"Tab 2\"))))   )    server <- function(input, output) {   }    shinyApp(ui, server) }"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_sidebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sidebar of a dashboard. — dashboard_sidebar","title":"Create a sidebar of a dashboard. — dashboard_sidebar","text":"Create pushable sidebar dashboard menu items additional UI elements.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_sidebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sidebar of a dashboard. — dashboard_sidebar","text":"","code":"dashboard_sidebar(   ...,   side = \"left\",   size = \"thin\",   color = \"\",   inverted = FALSE,   closable = FALSE,   pushable = TRUE,   center = FALSE,   visible = TRUE,   disable = FALSE,   overlay = FALSE,   dim_page = FALSE,   class = \"\" )  dashboardSidebar(   ...,   side = \"left\",   size = \"thin\",   color = \"\",   inverted = FALSE,   closable = FALSE,   pushable = TRUE,   center = FALSE,   visible = TRUE,   disable = FALSE,   overlay = FALSE,   dim_page = FALSE,   class = \"\" )"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_sidebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sidebar of a dashboard. — dashboard_sidebar","text":"... UI elements include within sidebar. side Placement sidebar. One c(\"left\", \"right\", \"top\", \"bottom\") size Size sidebar. One c(\"\", \"thin\", \"thin\", \"wide\", \"wide\") color Color sidebar / text / icons (depending value `inverted` parameter. \\ One c(\"\", \"red\", \"orange\", \"yellow\", \"olive\", \"green\", \"teal\", \"blue\", \"violet\", \"purple\", \"pink\", \"brown\", \"grey\", \"black\") inverted FALSE sidebar white text colored. \\ TRUE text white background colored. Default FALSE. closable TRUE allow close sidebar clicking body. Default FALSE pushable TRUE menu button active. Default TRUE center label icon centerd menu items. Default FALSE visible sidebar visible start. Default TRUE disable TRUE, display sidebar. overlay TRUE, opened sidebar cover tab content. Otherwise displayed next content. Relevant sidebar positioned left right. Default FALSE dim_page TRUE, page content darkened sidebr open. Default FALSE class CSS class applied container dashboardSidebar.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_sidebar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a sidebar of a dashboard. — dashboard_sidebar","text":"sidebar can passed dashboardPage","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_sidebar.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a sidebar of a dashboard. — dashboard_sidebar","text":"dashboardSidebar(): Create sidebar dashboard (alias dashboard_sidebar compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dashboard_sidebar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sidebar of a dashboard. — dashboard_sidebar","text":"","code":"if(interactive()){    library(shiny)   library(semantic.dashboard)    ui <- dashboardPage(     dashboardHeader(color = \"blue\"),     dashboardSidebar(side = \"left\", size = \"thin\", color = \"teal\",                      sidebarMenu(                        menuItem(tabName = \"tab1\", \"Tab 1\"),                        menuItem(tabName = \"tab2\", \"Tab 2\"))),     dashboardBody(tabItems(       tabItem(tabName = \"tab1\", p(\"Tab 1\")),       tabItem(tabName = \"tab2\", p(\"Tab 2\"))))   )    server <- function(input, output) {   }    shinyApp(ui, server) }"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dropdown menu. — dropdown_menu","title":"Create a dropdown menu. — dropdown_menu","text":"Create dropdown menu additional UI elements.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dropdown menu. — dropdown_menu","text":"","code":"dropdown_menu(..., type = \"messages\", icon = NULL, show_counter = TRUE)  dropdownMenu(..., type = \"messages\", icon = NULL, show_counter = TRUE)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dropdown menu. — dropdown_menu","text":"... UI elements include within dropdown menu. type Type displayed items. icon Icon dropdown menu. specyfied created based type agrument. show_counter true circular label counter going shown dropdown.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dropdown menu. — dropdown_menu","text":"dropdown menu can passed dashboardHeader","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a dropdown menu. — dropdown_menu","text":"dropdownMenu(): Create dropdown menu (alias dropdown_menu compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dropdown menu. — dropdown_menu","text":"","code":"dropdownMenu(icon = icon(\"warning sign\"), taskItem(\"Project progress...\", 50.777, color = \"red\")) #> <button class=\"ui icon top right inline item dropdown button\" style=\"margin-right: 0\"> #>   <i class=\"warning sign icon\"><\/i> #>   <div class=\"ui circular mini label\" style=\"\">1<\/div> #>   <div class=\"menu\"> #>     <div class=\"item\" style=\"min-width: 200px;\"> #>       <div class=\"ui active progress red\" data-percent=\"50.777\" data-total=\"100\"> #>         <div class=\"bar\"> #>           <div class=\"progress\"><\/div> #>         <\/div> #>         <div class=\"label\">Project progress...<\/div> #>       <\/div> #>     <\/div> #>   <\/div> #>   <script>$('.ui.dropdown').dropdown();<\/script> #>   <script>$('.progress').progress();<\/script> #> <\/button> dropdownMenu(type = \"notifications\", notificationItem(\"This is notification!\", color = \"red\")) #> <button class=\"ui icon top right inline item dropdown button\" style=\"margin-right: 0\"> #>   <i class=\"warning sign icon\"><\/i> #>   <div class=\"ui circular mini label\" style=\"\">1<\/div> #>   <div class=\"menu\"> #>     <div class=\"item\"> #>       <div class=\"ui label red\"> #>         <i class=\"small warning icon\"><\/i> #>         This is notification! #>       <\/div> #>     <\/div> #>   <\/div> #>   <script>$('.ui.dropdown').dropdown();<\/script> #>   <script>$('.progress').progress();<\/script> #> <\/button>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dropdown menu output. — dropdown_menu_output","title":"Create a dropdown menu output. — dropdown_menu_output","text":"UI-side function dynamic dropdownMenu.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dropdown menu output. — dropdown_menu_output","text":"","code":"dropdown_menu_output(outputId)  dropdownMenuOutput(outputId)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dropdown menu output. — dropdown_menu_output","text":"outputId Id output.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dropdown menu output. — dropdown_menu_output","text":"dropdown menu can passed dashboardHeader","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu_output.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a dropdown menu output. — dropdown_menu_output","text":"dropdownMenuOutput(): Create dropdown menu output (alias dropdown_menu_output compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/dropdown_menu_output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dropdown menu output. — dropdown_menu_output","text":"","code":"if (FALSE) { dropdownMenuOutput(\"dropdown\")  output$dropdown <- renderDropdownMenu({   dropdownMenu(messageItem(\"Michał\", \"Test message\", color = \"teal\"),               messageItem(\"Marek\", \"Another test!\", icon = \"warning\", color = \"red\")) }) }"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/get_dashboard_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the semantic.dashboard dependencies — get_dashboard_dependencies","title":"Get the semantic.dashboard dependencies — get_dashboard_dependencies","text":"add dependencies future follow htmlDependency help.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/get_dashboard_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the semantic.dashboard dependencies — get_dashboard_dependencies","text":"","code":"get_dashboard_dependencies()"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/get_dashboard_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the semantic.dashboard dependencies — get_dashboard_dependencies","text":"semantic.dashboard dependencies","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/icon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Semantic UI icon tag (alias for icon for compatibility with shinydashboard) — icon","title":"Create Semantic UI icon tag (alias for icon for compatibility with shinydashboard) — icon","text":"creates icon tag using Semantic UI styles.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/icon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Semantic UI icon tag (alias for icon for compatibility with shinydashboard) — icon","text":"","code":"icon(type, ...)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/icon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Semantic UI icon tag (alias for icon for compatibility with shinydashboard) — icon","text":"type name icon. Look http://semantic-ui.com/elements/icon.html possibilities. ... arguments added attributes tag (e.g. style, class etc.)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/icon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Semantic UI icon tag (alias for icon for compatibility with shinydashboard) — icon","text":"","code":"icon(\"dog\") #> <i class=\"dog icon\"><\/i>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/light_semantic_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Semantic light colors\nhttps://github.com/Semantic-Org/Semantic-UI/blob/master/src/themes/default/globals/site.variables — light_semantic_palette","title":"Semantic light colors\nhttps://github.com/Semantic-Org/Semantic-UI/blob/master/src/themes/default/globals/site.variables — light_semantic_palette","text":"Semantic light colors https://github.com/Semantic-Org/Semantic-UI/blob/master/src/themes/default/globals/site.variables","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/light_semantic_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semantic light colors\nhttps://github.com/Semantic-Org/Semantic-UI/blob/master/src/themes/default/globals/site.variables — light_semantic_palette","text":"","code":"light_semantic_palette"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/light_semantic_palette.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Semantic light colors\nhttps://github.com/Semantic-Org/Semantic-UI/blob/master/src/themes/default/globals/site.variables — light_semantic_palette","text":"object class character length 13.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/menu_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a menu item. — menu_item","title":"Create a menu item. — menu_item","text":"Create menu item corresponding tab.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/menu_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a menu item. — menu_item","text":"","code":"menu_item(   text,   ...,   icon = NULL,   tabName = NULL,   href = NULL,   newtab = TRUE,   selected = FALSE )  menuItem(   text,   ...,   icon = NULL,   tabName = NULL,   href = NULL,   newtab = TRUE,   selected = FALSE )  menuSubItem(   text,   ...,   icon = NULL,   tabName = NULL,   href = NULL,   newtab = TRUE,   selected = FALSE )"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/menu_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a menu item. — menu_item","text":"text Text show menu item. ... may consist menuSubItems. icon Icon menu item. (Optional) tabName Id tab. compatible href. href link address. compatible tabName. newtab href supplied, link open new browser tab? selected TRUE, menuItem start selected.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/menu_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a menu item. — menu_item","text":"menu item can passed sidebarMenu","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/menu_item.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a menu item. — menu_item","text":"menuItem(): Create menu item (alias manu_item compatibility shinydashboard) menuSubItem(): Create menu item (alias manu_item compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/menu_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a menu item. — menu_item","text":"","code":"menuItem(tabName = \"plot_tab\", text = \"My plot\", icon = icon(\"home\")) #> <a class=\"item\" href=\"#shiny-tab-plot_tab\" data-tab=\"shiny-tab-plot_tab\" data-toggle=\"tab\" data-value=\"plot_tab\"> #>   <i class=\"home icon\"><\/i> #>   My plot #> <\/a>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/menu_item_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a menu item output. — menu_item_output","title":"Create a menu item output. — menu_item_output","text":"UI-side function dynamic manuItem.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/menu_item_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a menu item output. — menu_item_output","text":"","code":"menu_item_output(outputId)  menuItemOutput(outputId)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/menu_item_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a menu item output. — menu_item_output","text":"outputId Id output.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/menu_item_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a menu item output. — menu_item_output","text":"menu item can passed sidebarMenu","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/menu_item_output.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a menu item output. — menu_item_output","text":"menuItemOutput(): Create menu item output (alias menu_item_output compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/message_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a message item. — message_item","title":"Create a message item. — message_item","text":"Create message item.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/message_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a message item. — message_item","text":"","code":"message_item(from, message, ..., icon = \"user\")  messageItem(from, message, ..., icon = \"user\")"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/message_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a message item. — message_item","text":"message . message Text message. ... Additional UI elements include within dropdown menu. icon Additional icon.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/message_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a message item. — message_item","text":"message item can passed dropdownMenu","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/message_item.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a message item. — message_item","text":"messageItem(): Create message item (alias message_item compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/message_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a message item. — message_item","text":"","code":"messageItem(\"Marek\", \"Another test!\", icon = \"warning\") #> <a class=\"item\"> #>   <span class=\"description\">Another test!<\/span> #>   <span class=\"text\"> #>     <i class=\"warning icon\"><\/i> #>     Marek #>   <\/span> #> <\/a>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/notification_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a notification item. — notification_item","title":"Create a notification item. — notification_item","text":"Create notification item.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/notification_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a notification item. — notification_item","text":"","code":"notification_item(text, icon = \"warning\", color = \"\")  notificationItem(text, icon = \"warning\", color = \"\")"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/notification_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a notification item. — notification_item","text":"text Text notification. icon Additional icon. color Color notification item. One c(\"\", \"red\", \"orange\", \"yellow\", \"olive\", \"green\", \"teal\", \"blue\", \"violet\", \"purple\", \"pink\", \"brown\", \"grey\", \"black\")","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/notification_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a notification item. — notification_item","text":"notification item can passed dropdownMenu","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/notification_item.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a notification item. — notification_item","text":"notificationItem(): Create notification item (alias notification_item compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/notification_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a notification item. — notification_item","text":"","code":"notificationItem(\"This is notification!\", color = \"red\") #> <div class=\"item\"> #>   <div class=\"ui label red\"> #>     <i class=\"small warning icon\"><\/i> #>     This is notification! #>   <\/div> #> <\/div>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_dropdown_menu.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dropdown menu output. — render_dropdown_menu","title":"Create a dropdown menu output. — render_dropdown_menu","text":"Server-side function dynamic dropdownMenu.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_dropdown_menu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dropdown menu output. — render_dropdown_menu","text":"","code":"render_dropdown_menu(expr, env = parent.frame(), quoted = FALSE)  renderDropdownMenu(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_dropdown_menu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dropdown menu output. — render_dropdown_menu","text":"expr dropdownMenu. env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_dropdown_menu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dropdown menu output. — render_dropdown_menu","text":"dynamic dropdown menu can assigned output.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_dropdown_menu.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a dropdown menu output. — render_dropdown_menu","text":"renderDropdownMenu(): Create dropdown menu output (alias render_dropdown_menu compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_dropdown_menu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dropdown menu output. — render_dropdown_menu","text":"","code":"if (FALSE) { dropdownMenuOutput(\"dropdown\")  output$dropdown <- renderDropdownMenu({   dropdownMenu(messageItem(\"Michał\", \"Test message\", color = \"teal\"),               messageItem(\"Marek\", \"Another test!\", icon = \"warning\", color = \"red\")) }) }"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_menu.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a menu output. — render_menu","title":"Create a menu output. — render_menu","text":"Server-side function dynamic sidebarMenu.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_menu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a menu output. — render_menu","text":"","code":"render_menu(expr, env = parent.frame(), quoted = FALSE)  renderMenu(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_menu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a menu output. — render_menu","text":"expr menu. env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_menu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a menu output. — render_menu","text":"dynamic menu can assigned output.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_menu.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a menu output. — render_menu","text":"renderMenu(): Create menu output (alias render_menu compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_value_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a value box output. — render_value_box","title":"Create a value box output. — render_value_box","text":"Server-side function dynamic valueBox.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_value_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a value box output. — render_value_box","text":"","code":"render_value_box(expr, env = parent.frame(), quoted = FALSE)  renderValueBox(expr, env = parent.frame(), quoted = FALSE)  renderInfoBox(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_value_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a value box output. — render_value_box","text":"expr ValueBox. env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_value_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a value box output. — render_value_box","text":"dynamic valueBox can assigned output.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_value_box.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a value box output. — render_value_box","text":"renderValueBox(): Create value box output (alias render_value_box) renderInfoBox(): Create value box output (alias render_value_box)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/render_value_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a value box output. — render_value_box","text":"","code":"if (FALSE) { valueBoxOutput(\"value_box\")  output$value_box <- renderValueBox({   valueBox(     value = 33.45,     subtitle = \"Simple valuebox\",     icon = icon(\"bar chart\"),     color = \"purple\",     width = 5) }) }"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/semantic.dashboard.html","id":null,"dir":"Reference","previous_headings":"","what":"semantic.dashboard — semantic.dashboard","title":"semantic.dashboard — semantic.dashboard","text":"semantic.dashboard","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/semantic_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Semantic colors\nhttps://github.com/Semantic-Org/Semantic-UI/blob/master/src/themes/default/globals/site.variables — semantic_palette","title":"Semantic colors\nhttps://github.com/Semantic-Org/Semantic-UI/blob/master/src/themes/default/globals/site.variables — semantic_palette","text":"Semantic colors https://github.com/Semantic-Org/Semantic-UI/blob/master/src/themes/default/globals/site.variables","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/semantic_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semantic colors\nhttps://github.com/Semantic-Org/Semantic-UI/blob/master/src/themes/default/globals/site.variables — semantic_palette","text":"","code":"semantic_palette"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/semantic_palette.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Semantic colors\nhttps://github.com/Semantic-Org/Semantic-UI/blob/master/src/themes/default/globals/site.variables — semantic_palette","text":"object class character length 13.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sidebar menu. — sidebar_menu","title":"Create a sidebar menu. — sidebar_menu","text":"Create sidebar menu menu items.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sidebar menu. — sidebar_menu","text":"","code":"sidebar_menu(..., id = \"uisidebar\")  sidebarMenu(..., id = \"uisidebar\")"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sidebar menu. — sidebar_menu","text":"... Menu items. id sidebar id class also used update input server side. Default uisidebar","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a sidebar menu. — sidebar_menu","text":"sidebar menu can passed dashboardSidebar","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a sidebar menu. — sidebar_menu","text":"possible set selected menu item setting `selected = TRUE` `menuItem`.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a sidebar menu. — sidebar_menu","text":"sidebarMenu(): Create sidebar menu (alias sidebar_menu compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sidebar menu. — sidebar_menu","text":"","code":"sidebarMenu(   menuItem(tabName = \"plot_tab\", text = \"My plot\", icon = icon(\"home\")),   menuItem(tabName = \"table_tab\", text = \"My table\", icon = icon(\"smile\"), selected = TRUE)   ) #> $id #> [1] \"uisidebar\" #>  #> [[2]] #> <a class=\"item\" href=\"#shiny-tab-plot_tab\" data-tab=\"shiny-tab-plot_tab\" data-toggle=\"tab\" data-value=\"plot_tab\"> #>   <i class=\"home icon\"><\/i> #>   My plot #> <\/a> #>  #> [[3]] #> <a class=\"item\" href=\"#shiny-tab-table_tab\" data-tab=\"shiny-tab-table_tab\" data-toggle=\"tab\" data-value=\"table_tab\"> #>   <i class=\"smile icon\"><\/i> #>   My table #>   <script>  $(function() { #>     ['.dashboard-sidebar a', '.tab-content > div'].forEach(function(tag) { #>       $(`${tag}[data-tab]`).removeClass('active'); #>       $(`${tag}[data-tab=\"shiny-tab-table_tab\"]`).addClass('active'); #>     }) #>   })<\/script> #> <\/a> #>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sidebar menu output. — sidebar_menu_output","title":"Create a sidebar menu output. — sidebar_menu_output","text":"UI-side function dynamic sidebarMenu.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sidebar menu output. — sidebar_menu_output","text":"","code":"sidebar_menu_output(outputId)  sidebarMenuOutput(outputId)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sidebar menu output. — sidebar_menu_output","text":"outputId Id output.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a sidebar menu output. — sidebar_menu_output","text":"sidebar menu can passed dashboardSidebar","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/sidebar_menu_output.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a sidebar menu output. — sidebar_menu_output","text":"sidebarMenuOutput(): Create sidebar menu output (alias sidebar_menu_output compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tab box. — tab_box","title":"Create a tab box. — tab_box","text":"Create tab box additional UI elements.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tab box. — tab_box","text":"","code":"tab_box(   tabs,   title = NULL,   color = \"\",   ribbon = TRUE,   title_side = \"top right\",   collapsible = TRUE,   width = 8,   id = NULL,   ... )  tabBox(   tabs,   title = NULL,   color = \"\",   ribbon = TRUE,   title_side = \"top right\",   collapsible = TRUE,   width = 8,   id = NULL,   ... )"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tab box. — tab_box","text":"tabs Tabs include within box. title Label box. color Color box. One c(\"\", \"red\", \"orange\", \"yellow\", \"olive\", \"green\", \"teal\", \"blue\", \"violet\", \"purple\", \"pink\", \"brown\", \"grey\", \"black\") ribbon label presented ribbon. title_side Side label. One c(\"top\", \"bottom\", \"top left\", \"top right\", \"bottom left\", \"bottom right\") ribbon = FALSE, one c(\"top left\", \"top right\") ribbon = TRUE collapsible minimize button added label. width Width box. id ID box. ... elements box.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tab box. — tab_box","text":"box can passed dashboardBody","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_box.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a tab box. — tab_box","text":"tabBox(): Create tab box (alias tab_box compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a tab box. — tab_box","text":"","code":"tabBox(title = \"Sample tab box\", color = \"blue\", width = 5,        tabs = list(          list(menu = \"First Tab\", content = \"This is first tab\"),          list(menu = \"Second Tab\", content = \"This is second tab\")        )) #> <div class=\"five wide column\"> #>   <div class=\"ui segment raised blue\"> #>     <div id=\"box_560093305853193805740644572603\" class=\"ui accordion\"> #>       <div id=\"title_560093305853193805740644572603\" class=\"title\" style=\"cursor: auto\"> #>         <div class=\"ui top right ribbon label blue\"> #>           <i class=\"minus icon\" style=\"cursor: pointer;\"><\/i> #>           Sample tab box #>         <\/div> #>       <\/div> #>       <div class=\"content active\"> #>         <div> #>           <div id=\"menu-hpfmhndhuvglvruirvoh\" class=\"ui menu sem top attached tabular\"> #>             <a class=\"item active\" data-tab=\"tab-trevhffajjmbkyhfuzor\">First Tab<\/a> #>             <a class=\"item \" data-tab=\"tab-kldevjltcofzfnnbuquy\">Second Tab<\/a> #>           <\/div> #>           <div class=\"ui tab bottom attached grid segment active\" data-tab=\"tab-trevhffajjmbkyhfuzor\">This is first tab<\/div> #>           <div class=\"ui tab bottom attached grid segment \" data-tab=\"tab-kldevjltcofzfnnbuquy\">This is second tab<\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>   <\/div> #>   <script>$(document).ready(function() {$('#box_560093305853193805740644572603').accordion({ #>   selector: { trigger: '#title_560093305853193805740644572603 > .label > .icon' }, #>   onOpening: function() { $('#title_560093305853193805740644572603 > .label > .icon').removeClass('plus').addClass('minus'); }, #>   onClosing: function() { $('#title_560093305853193805740644572603 > .label > .icon').removeClass('minus').addClass('plus'); } #> }); })<\/script> #> <\/div>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tab — tab_item","title":"Create a tab — tab_item","text":"Create tab panel additional UI elements.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tab — tab_item","text":"","code":"tab_item(tabName, ..., fluid = TRUE)  tabItem(tabName, ..., fluid = TRUE)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tab — tab_item","text":"tabName Id tab. ... UI elements include within tab. fluid Controls whether tab width 100% (TRUE) limited Foomantic UI breakpoints (FALSE).","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tab — tab_item","text":"tab can passed dashboardBody","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_item.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a tab — tab_item","text":"tabItem(): Create tab (alias tab_item compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a tab — tab_item","text":"","code":"tab_item(tabName = \"tab1\", \"Tab 1\") #> <div role=\"tabpanel\" style=\"height: 100%;\" class=\"ui tab tab-pane container fluid\" id=\"shiny-tab-tab1\" data-tab=\"shiny-tab-tab1\"> #>   <div class=\"ui padded grid\">Tab 1<\/div> #> <\/div>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a panel with tabs. — tab_items","title":"Create a panel with tabs. — tab_items","text":"Create panel tabs.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a panel with tabs. — tab_items","text":"","code":"tab_items(...)  tabItems(...)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a panel with tabs. — tab_items","text":"... Tabs.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a panel with tabs. — tab_items","text":"panel tabs can passed dashboardBody","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_items.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a panel with tabs. — tab_items","text":"tabItems(): Create panel tabs (alias tab_items compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/tab_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a panel with tabs. — tab_items","text":"","code":"tabItems(  tabItem(tabName = \"tab1\", \"Tab 1\"),  tabItem(tabName = \"tab2\", \"Tab 2\")) #> <div class=\"tab-content\"> #>   <div role=\"tabpanel\" style=\"height: 100%;\" class=\"ui tab tab-pane container fluid\" id=\"shiny-tab-tab1\" data-tab=\"shiny-tab-tab1\"> #>     <div class=\"ui padded grid\">Tab 1<\/div> #>   <\/div> #>   <div role=\"tabpanel\" style=\"height: 100%;\" class=\"ui tab tab-pane container fluid\" id=\"shiny-tab-tab2\" data-tab=\"shiny-tab-tab2\"> #>     <div class=\"ui padded grid\">Tab 2<\/div> #>   <\/div> #> <\/div>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/task_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a task item. — task_item","title":"Create a task item. — task_item","text":"Create task item.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/task_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a task item. — task_item","text":"","code":"task_item(text, value, color = \"\")  taskItem(text, value, color = \"\")"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/task_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a task item. — task_item","text":"text Progress bar label. value Progress bar value. color Color task item. One c(\"\", \"red\", \"orange\", \"yellow\", \"olive\", \"green\", \"teal\", \"blue\", \"violet\", \"purple\", \"pink\", \"brown\", \"grey\", \"black\")","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/task_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a task item. — task_item","text":"task item can passed dropdownMenu","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/task_item.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a task item. — task_item","text":"taskItem(): Create task item (alias taks_item compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/task_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a task item. — task_item","text":"","code":"taskItem(\"Project progress...\", 50.777, color = \"red\") #> <div class=\"item\" style=\"min-width: 200px;\"> #>   <div class=\"ui active progress red\" data-percent=\"50.777\" data-total=\"100\"> #>     <div class=\"bar\"> #>       <div class=\"progress\"><\/div> #>     <\/div> #>     <div class=\"label\">Project progress...<\/div> #>   <\/div> #> <\/div>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/update_tab_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the selected tab on the client — update_tab_items","title":"Change the selected tab on the client — update_tab_items","text":"Change selected tab client","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/update_tab_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the selected tab on the client — update_tab_items","text":"","code":"update_tab_items(session = shiny::getDefaultReactiveDomain(), tab)  updateTabItems(session = shiny::getDefaultReactiveDomain(), tab)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/update_tab_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the selected tab on the client — update_tab_items","text":"session session object passed function given shinyServer tab name tab selected","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/update_tab_items.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Change the selected tab on the client — update_tab_items","text":"updateTabItems(): Change selected item client (alias update_tab_items compatibility shinydashboard)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/update_tab_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the selected tab on the client — update_tab_items","text":"","code":"if (interactive()) {   ui <- dashboardPage(     dashboardSidebar(       sidebarMenu(         menuItem(\"Tab 1\", tabName = \"tab1\"),         menuItem(\"Tab 2\", tabName = \"tab2\")       )     ),     dashboardBody(       tabItems(         tabItem(tabName = \"tab1\", h2(\"Tab 1\")),         tabItem(tabName = \"tab2\", h2(\"Tab 2\"))      )    )   )    server <- function(input, output, session) {     update_tab_items(tab = \"tab2\")   }    shinyApp(ui, server) }"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/validate_tab_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid tab name should not containt dot character '.'. — validate_tab_name","title":"Valid tab name should not containt dot character '.'. — validate_tab_name","text":"Valid tab name containt dot character '.'.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/validate_tab_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Valid tab name should not containt dot character '.'. — validate_tab_name","text":"","code":"validate_tab_name(name)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/validate_tab_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Valid tab name should not containt dot character '.'. — validate_tab_name","text":"name Tab name validate.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a valueBox. — value_box","title":"Create a valueBox. — value_box","text":"Create valueBox additional UI elements.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a valueBox. — value_box","text":"","code":"value_box(subtitle, value, icon = NULL, color = \"blue\", width = 5, size = \"\")  valueBox(subtitle, value, icon = NULL, color = \"blue\", width = 5, size = \"\")  infoBox(subtitle, value, icon = NULL, color = \"blue\", width = 5, size = \"\")"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a valueBox. — value_box","text":"subtitle Label valueBox. value Value valueBox. icon Icon valueBox. color Color valueBox. One c(\"\", \"red\", \"orange\", \"yellow\", \"olive\", \"green\", \"teal\", \"blue\", \"violet\", \"purple\", \"pink\", \"brown\", \"grey\", \"black\") width Width valueBox. size Size value. One c(\"mini\", \"tiny\", \"small\", \"\", \"large\", \"huge\"). Default \"\".","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a valueBox. — value_box","text":"valueBox can passed dashboardBody","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a valueBox. — value_box","text":"valueBox(): Create valueBox (alias value_box) infoBox(): Create valueBox (alias value_box)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a valueBox. — value_box","text":"","code":"valueBox(\"Unread Mail\", 44, icon(\"mail\"), color = \"blue\", width = 5, size = \"tiny\") #> <div class=\"five wide column\"> #>   <div class=\"ui fluid card blue\"> #>     <div class=\"ui statistic tiny\"> #>       <div class=\"value\"> #>         <i class=\"mail icon\"><\/i> #>         44 #>       <\/div> #>       <div class=\"label\">Unread Mail<\/div> #>     <\/div> #>   <\/div> #> <\/div>"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a value box output. — value_box_output","title":"Create a value box output. — value_box_output","text":"UI-side function dynamic valueBox.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a value box output. — value_box_output","text":"","code":"value_box_output(outputId, width = 5)  valueBoxOutput(outputId, width = 5)  infoBoxOutput(outputId, width = 5)"},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a value box output. — value_box_output","text":"outputId Id output. width Width valueBox.","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a value box output. — value_box_output","text":"value box can passed dashboardBody","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box_output.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a value box output. — value_box_output","text":"valueBoxOutput(): Create valueBox output (alias value_box_output) infoBoxOutput(): Create valueBox output (alias value_box_output)","code":""},{"path":"https://appsilon.github.io/semantic.dashboard/reference/value_box_output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a value box output. — value_box_output","text":"","code":"if (FALSE) { valueBoxOutput(\"value_box\")  output$value_box <- renderValueBox({   valueBox(     value = 33.45,     subtitle = \"Simple valuebox\",     icon = icon(\"bar chart\"),     color = \"purple\",     width = 5) }) }"}]
